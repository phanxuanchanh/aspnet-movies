--
-- Script was generated by Devart dbForge Studio for SQL Server, Version 2025.1.230.0
-- Product home page: https://www.devart.com/dbforge/sql/studio
-- Script date 8/27/2025 7:53:57 PM
-- Server version: 15.00.4382
--

SET DATEFORMAT ymd
SET ARITHABORT, ANSI_PADDING, ANSI_WARNINGS, CONCAT_NULL_YIELDS_NULL, QUOTED_IDENTIFIER, ANSI_NULLS, NOCOUNT ON
SET NUMERIC_ROUNDABORT, IMPLICIT_TRANSACTIONS, XACT_ABORT OFF
GO

USE MovieDB
GO

IF DB_NAME() <> N'MovieDB' SET NOEXEC ON
GO

--
-- Create table [dbo].[Users]
--
PRINT (N'Create table [dbo].[Users]')
GO
CREATE TABLE dbo.Users (
  ID varchar(100) NOT NULL,
  UserName varchar(50) NOT NULL,
  SurName nvarchar(50) NULL,
  MiddleName nvarchar(50) NULL,
  Name nvarchar(50) NULL,
  Email nvarchar(100) NOT NULL,
  PhoneNumber char(11) NULL,
  Password varchar(100) NOT NULL,
  Salt varchar(100) NOT NULL,
  Description ntext NULL,
  Activated bit NOT NULL,
  RoleId varchar(100) NOT NULL,
  CreatedAt datetime NULL,
  UpdatedAt datetime NULL,
  DeletedAt datetime NULL,
  CONSTRAINT PK_User PRIMARY KEY CLUSTERED (ID)
)
ON [PRIMARY]
TEXTIMAGE_ON [PRIMARY]
GO

--
-- Create table [dbo].[UserMetaLinks]
--
PRINT (N'Create table [dbo].[UserMetaLinks]')
GO
CREATE TABLE dbo.UserMetaLinks (
  MetaId int NOT NULL,
  UserId varchar(100) NOT NULL,
  CONSTRAINT PK_UserMetaLink PRIMARY KEY CLUSTERED (MetaId, UserId)
)
ON [PRIMARY]
GO

--
-- Create table [dbo].[UserMetadata]
--
PRINT (N'Create table [dbo].[UserMetadata]')
GO
CREATE TABLE dbo.UserMetadata (
  MetadataId int NOT NULL,
  Name varchar(50) NOT NULL,
  Description varchar(100) NULL,
  Custom varchar(30) NULL,
  Type datetime NULL,
  CreatedAt datetime NULL,
  UpdatedAt varchar(50) NULL,
  DeletedAt varchar(50) NULL,
  CONSTRAINT PK_PaymentInfo PRIMARY KEY CLUSTERED (MetadataId)
)
ON [PRIMARY]
GO

--
-- Create table [dbo].[UserHistories]
--
PRINT (N'Create table [dbo].[UserHistories]')
GO
CREATE TABLE dbo.UserHistories (
  Id bigint NOT NULL,
  UserId varchar(100) NOT NULL,
  ActionType varchar(20) NOT NULL,
  ActionContent varchar(max) NULL,
  FilmId varchar(100) NULL,
  CreatedAt datetime NULL,
  CONSTRAINT PK_UserReaction PRIMARY KEY CLUSTERED (Id)
)
ON [PRIMARY]
TEXTIMAGE_ON [PRIMARY]
GO

--
-- Create table [dbo].[TaxonomyLinks]
--
PRINT (N'Create table [dbo].[TaxonomyLinks]')
GO
CREATE TABLE dbo.TaxonomyLinks (
  FilmId varchar(100) NOT NULL,
  TaxonomyId int NOT NULL,
  PRIMARY KEY CLUSTERED (FilmId, TaxonomyId)
)
ON [PRIMARY]
GO

--
-- Create table [dbo].[Taxonomies]
--
PRINT (N'Create table [dbo].[Taxonomies]')
GO
CREATE TABLE dbo.Taxonomies (
  Id int IDENTITY,
  Name nvarchar(255) NOT NULL,
  Description nvarchar(max) NULL,
  Custom nvarchar(max) NULL,
  Type nvarchar(50) NOT NULL,
  CreatedAt datetime NOT NULL DEFAULT (getdate()),
  UpdatedAt datetime NULL,
  DeletedAt datetime NULL,
  PRIMARY KEY CLUSTERED (Id)
)
ON [PRIMARY]
TEXTIMAGE_ON [PRIMARY]
GO

--
-- Create table [dbo].[Roles]
--
PRINT (N'Create table [dbo].[Roles]')
GO
CREATE TABLE dbo.Roles (
  ID varchar(100) NOT NULL,
  name nvarchar(50) NOT NULL,
  CreatedAt datetime NULL,
  UpdatedAt datetime NULL,
  DeletedAt varchar(50) NULL,
  CONSTRAINT PK_Role PRIMARY KEY CLUSTERED (ID)
)
ON [PRIMARY]
GO

--
-- Create table [dbo].[PeopleLinks]
--
PRINT (N'Create table [dbo].[PeopleLinks]')
GO
CREATE TABLE dbo.PeopleLinks (
  FilmId varchar(100) NOT NULL,
  PersonId bigint NOT NULL,
  PRIMARY KEY CLUSTERED (FilmId, PersonId)
)
ON [PRIMARY]
GO

--
-- Create table [dbo].[People]
--
PRINT (N'Create table [dbo].[People]')
GO
CREATE TABLE dbo.People (
  Id bigint IDENTITY,
  Name nvarchar(255) NOT NULL,
  Description nvarchar(max) NULL,
  Custom nvarchar(max) NULL,
  Type nvarchar(50) NOT NULL,
  CreatedAt datetime NOT NULL DEFAULT (getdate()),
  UpdatedAt datetime NULL,
  DeletedAt datetime NULL,
  PRIMARY KEY CLUSTERED (Id)
)
ON [PRIMARY]
TEXTIMAGE_ON [PRIMARY]
GO

--
-- Create table [dbo].[Films]
--
PRINT (N'Create table [dbo].[Films]')
GO
CREATE TABLE dbo.Films (
  ID varchar(100) NOT NULL,
  name nvarchar(50) NOT NULL,
  description ntext NULL,
  productionCompany nvarchar(50) NOT NULL,
  releaseDate varchar(10) NOT NULL,
  upvote bigint NULL,
  downvote bigint NULL,
  views bigint NULL,
  duration varchar(20) NULL,
  thumbnail varchar(100) NULL,
  source varchar(100) NULL,
  createdAt datetime NULL,
  updatedAt datetime NULL,
  deletedAt datetime NULL,
  CONSTRAINT PK_Film PRIMARY KEY CLUSTERED (ID)
)
ON [PRIMARY]
TEXTIMAGE_ON [PRIMARY]
GO

--
-- Create table [dbo].[FilmMetaLinks]
--
PRINT (N'Create table [dbo].[FilmMetaLinks]')
GO
CREATE TABLE dbo.FilmMetaLinks (
  FilmId varchar(100) NOT NULL,
  MetaId int NOT NULL,
  PRIMARY KEY CLUSTERED (FilmId, MetaId)
)
ON [PRIMARY]
GO

--
-- Create table [dbo].[FilmMetadata]
--
PRINT (N'Create table [dbo].[FilmMetadata]')
GO
CREATE TABLE dbo.FilmMetadata (
  Id int IDENTITY,
  Name nvarchar(255) NOT NULL,
  Description nvarchar(max) NULL,
  Custom nvarchar(max) NULL,
  Type nvarchar(50) NOT NULL,
  CreatedAt datetime NOT NULL DEFAULT (getdate()),
  UpdatedAt datetime NULL,
  DeletedAt datetime NULL,
  PRIMARY KEY CLUSTERED (Id)
)
ON [PRIMARY]
TEXTIMAGE_ON [PRIMARY]
GO

--
-- Create table [dbo].[AppSettings]
--
PRINT (N'Create table [dbo].[AppSettings]')
GO
CREATE TABLE dbo.AppSettings (
  Id int IDENTITY,
  Name varchar(100) NOT NULL,
  Value nvarchar(max) NULL,
  PRIMARY KEY CLUSTERED (Id),
  UNIQUE (Name)
)
ON [PRIMARY]
TEXTIMAGE_ON [PRIMARY]
GO

-- Table MovieDB.dbo.Users does not contain any data (it is empty)

-- Table MovieDB.dbo.UserMetaLinks does not contain any data (it is empty)

-- Table MovieDB.dbo.UserMetadata does not contain any data (it is empty)

-- Table MovieDB.dbo.UserHistories does not contain any data (it is empty)

-- Table MovieDB.dbo.TaxonomyLinks does not contain any data (it is empty)

-- Table MovieDB.dbo.Taxonomies does not contain any data (it is empty)

-- Table MovieDB.dbo.Roles does not contain any data (it is empty)

-- Table MovieDB.dbo.PeopleLinks does not contain any data (it is empty)

-- Table MovieDB.dbo.People does not contain any data (it is empty)

-- Table MovieDB.dbo.Films does not contain any data (it is empty)

-- Table MovieDB.dbo.FilmMetaLinks does not contain any data (it is empty)

-- Table MovieDB.dbo.FilmMetadata does not contain any data (it is empty)

-- 
-- Dumping data for table AppSettings
--
PRINT (N'Dumping data for table AppSettings')
SET IDENTITY_INSERT dbo.AppSettings ON
GO
INSERT dbo.AppSettings(Id, Name, Value) VALUES (1, 'cdn-server', NULL)
GO
SET IDENTITY_INSERT dbo.AppSettings OFF
GO

USE MovieDB
GO

IF DB_NAME() <> N'MovieDB' SET NOEXEC ON
GO

--
-- Create foreign key [FK_User_Role] on table [dbo].[Users]
--
PRINT (N'Create foreign key [FK_User_Role] on table [dbo].[Users]')
GO
ALTER TABLE dbo.Users
  ADD CONSTRAINT FK_User_Role FOREIGN KEY (RoleId) REFERENCES dbo.Roles (ID)
GO

--
-- Create foreign key [FK_UserMetaLink_User_ID] on table [dbo].[UserMetaLinks]
--
PRINT (N'Create foreign key [FK_UserMetaLink_User_ID] on table [dbo].[UserMetaLinks]')
GO
ALTER TABLE dbo.UserMetaLinks
  ADD CONSTRAINT FK_UserMetaLink_User_ID FOREIGN KEY (UserId) REFERENCES dbo.Users (ID)
GO

--
-- Create foreign key [FK_UserMetaLink_UserMetadata_MetadataId] on table [dbo].[UserMetaLinks]
--
PRINT (N'Create foreign key [FK_UserMetaLink_UserMetadata_MetadataId] on table [dbo].[UserMetaLinks]')
GO
ALTER TABLE dbo.UserMetaLinks
  ADD CONSTRAINT FK_UserMetaLink_UserMetadata_MetadataId FOREIGN KEY (MetaId) REFERENCES dbo.UserMetadata (MetadataId)
GO

--
-- Create foreign key [FK_UserHistory_Film_ID] on table [dbo].[UserHistories]
--
PRINT (N'Create foreign key [FK_UserHistory_Film_ID] on table [dbo].[UserHistories]')
GO
ALTER TABLE dbo.UserHistories
  ADD CONSTRAINT FK_UserHistory_Film_ID FOREIGN KEY (FilmId) REFERENCES dbo.Films (ID)
GO

--
-- Create foreign key [FK_UserHistory_User_ID] on table [dbo].[UserHistories]
--
PRINT (N'Create foreign key [FK_UserHistory_User_ID] on table [dbo].[UserHistories]')
GO
ALTER TABLE dbo.UserHistories
  ADD CONSTRAINT FK_UserHistory_User_ID FOREIGN KEY (UserId) REFERENCES dbo.Users (ID)
GO

--
-- Create foreign key on table [dbo].[TaxonomyLinks]
--
PRINT (N'Create foreign key on table [dbo].[TaxonomyLinks]')
GO
ALTER TABLE dbo.TaxonomyLinks
  ADD FOREIGN KEY (FilmId) REFERENCES dbo.Films (ID)
GO

--
-- Create foreign key on table [dbo].[TaxonomyLinks]
--
PRINT (N'Create foreign key on table [dbo].[TaxonomyLinks]')
GO
ALTER TABLE dbo.TaxonomyLinks
  ADD FOREIGN KEY (TaxonomyId) REFERENCES dbo.Taxonomies (Id)
GO

--
-- Create foreign key on table [dbo].[PeopleLinks]
--
PRINT (N'Create foreign key on table [dbo].[PeopleLinks]')
GO
ALTER TABLE dbo.PeopleLinks
  ADD FOREIGN KEY (FilmId) REFERENCES dbo.Films (ID)
GO

--
-- Create foreign key on table [dbo].[PeopleLinks]
--
PRINT (N'Create foreign key on table [dbo].[PeopleLinks]')
GO
ALTER TABLE dbo.PeopleLinks
  ADD FOREIGN KEY (PersonId) REFERENCES dbo.People (Id)
GO

--
-- Create foreign key on table [dbo].[FilmMetaLinks]
--
PRINT (N'Create foreign key on table [dbo].[FilmMetaLinks]')
GO
ALTER TABLE dbo.FilmMetaLinks
  ADD FOREIGN KEY (FilmId) REFERENCES dbo.Films (ID)
GO

--
-- Create foreign key on table [dbo].[FilmMetaLinks]
--
PRINT (N'Create foreign key on table [dbo].[FilmMetaLinks]')
GO
ALTER TABLE dbo.FilmMetaLinks
  ADD FOREIGN KEY (MetaId) REFERENCES dbo.FilmMetadata (Id)
GO

SET NOEXEC OFF
GO